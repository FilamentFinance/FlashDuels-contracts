{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x3c401b1DA2A0373cB137347d4fc76cF25C9dB128",
      "txHash": "0x24822b1e20dd4445312b4ef41ad3e523abcde1c7cba7b1683c52b786b9777880",
      "kind": "uups"
    },
    {
      "address": "0x3B0Ac6bB0Eb8e593C4616Bf3C328C94eDe1468Aa",
      "txHash": "0x61f2ed9a3bcb8db06df69e997c6a38f587ed8b72a41cfe4f0957d7fe972487bb",
      "kind": "uups"
    },
    {
      "address": "0xDcaF54D307729705Cf28614f5AebD1533342535c",
      "txHash": "0xd124d44caf89996f3699c9a1ddf58932aee1efde48d6c1bc6e60db6104de9a71",
      "kind": "uups"
    }
  ],
  "impls": {
    "b504b47d81ae40fd45d25055625cc039bd99c6112691f7f8bf79b8513f657b54": {
      "address": "0x02F65FB74523523f09A60e63c47f32F1fA36ec53",
      "txHash": "0xdcefc8f49df4907a67d78b24f5975e489bcae3ae9a0d76052626567ea315fc35",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "faucetMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USDC_Storage",
            "src": "contracts/mocks/mockToken.sol:11"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "USDC_Storage",
            "src": "contracts/mocks/mockToken.sol:15"
          },
          {
            "label": "lastMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "USDC_Storage",
            "src": "contracts/mocks/mockToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)234_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "07f64a3d07978beb6923c47da27732697ca37fcf5ac9ce2aa5a8b8d1f9052c9f": {
      "address": "0x2Cc9219dAdD7C46E91daeF5DdfBf41e077483de8",
      "txHash": "0x65d94e1a8fe0dd62af131fd3e1225a26f07b1fb8c16fece5d49d9442a33c8694",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)5305_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5341_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)241_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)312_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)5362": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)5346": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)5353": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)5370": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)5366": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5341_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)5305_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)5341_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)5366",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)5370",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5346",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5353",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)5305_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5346",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5353",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)5362",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b2c900a11ebd5214b1f34921fe6eee7c3ee9ba4d3204043f19de4c7c10649b20": {
      "address": "0x588EB0eD8BDC4276316C3e9aaF1C0880B1dcecaa",
      "txHash": "0x921df2d53481f8e56370b209fa146a51476beed3fa3b8232403f306a5ec72b19",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "protocolTreasury",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "FlashDuelsMarketplace",
            "src": "contracts/FlashDuelsMarketplace.sol:27"
          },
          {
            "label": "saleCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuelsMarketplace",
            "src": "contracts/FlashDuelsMarketplace.sol:28"
          },
          {
            "label": "maxStrikes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuelsMarketplace",
            "src": "contracts/FlashDuelsMarketplace.sol:29"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuelsMarketplace",
            "src": "contracts/FlashDuelsMarketplace.sol:31"
          },
          {
            "label": "flashDuels",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IFlashDuels)7049",
            "contract": "FlashDuelsMarketplace",
            "src": "contracts/FlashDuelsMarketplace.sol:32"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IERC20)2651",
            "contract": "FlashDuelsMarketplace",
            "src": "contracts/FlashDuelsMarketplace.sol:33"
          },
          {
            "label": "sales",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Sale)6204_storage))",
            "contract": "FlashDuelsMarketplace",
            "src": "contracts/FlashDuelsMarketplace.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)452_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)523_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2651": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IFlashDuels)7049": {
            "label": "contract IFlashDuels",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Sale)6204_storage))": {
            "label": "mapping(address => mapping(uint256 => struct FlashDuelsMarketplace.Sale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Sale)6204_storage)": {
            "label": "mapping(uint256 => struct FlashDuelsMarketplace.Sale)",
            "numberOfBytes": "32"
          },
          "t_struct(Sale)6204_storage": {
            "label": "struct FlashDuelsMarketplace.Sale",
            "members": [
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e7d5e8a52212e4e1523a1d8343fa59fcc83e4c73d2f2f25b41933e01e5060ed2": {
      "address": "0x90A87b4FA56F550F83C8f0796212084968A72Fa0",
      "txHash": "0x7f8bb5e5f3c2a05956bf79f4b8280a76355c5d8c90e4c1f46276b187b756764c",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)5308_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5344_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)241_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)312_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)5365": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)5349": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)5356": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)5373": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)5369": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5344_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)5308_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)5344_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)5369",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)5373",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5349",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5356",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)5308_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5349",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5356",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)5365",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c09fa071f17926a5e1267cf8dd98adc4ff27c8db10c4097d7f879fb367cba7c2": {
      "address": "0x0262cF89b355fc5764607d27E3112f9b3B9a383F",
      "txHash": "0x13995ddbb7b7699587ae0c37e8622ec2ae9c219cfca9ad064b4c7a8239442da9",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)5406_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5442_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)241_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)312_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)5463": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)5447": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)5454": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)5471": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)5467": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5442_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)5406_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)5442_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)5467",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)5471",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5447",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5454",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)5406_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5447",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5454",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)5463",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9c8869f9f9959fefa58645df73f9ae9d00f6e3005272d43f9ca82424fb02fead": {
      "address": "0x7cBb9E6c8f77E72d721F6C7eD182F217f188cc71",
      "txHash": "0xea25ef7d96ca835005647dfba00b25a081bf7b57f2e533b93de5ff45b3fbc4fa",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)6267_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)6303_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)241_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)312_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)6324": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)6308": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)6315": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)6332": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)6328": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)6303_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)6267_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)6303_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)6328",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)6332",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)6308",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)6315",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)6267_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)6308",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)6315",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)6324",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1a4ab9782dd20150f70c950df1543889de486bc40e6abf13b2b3c2b91a761cc0": {
      "address": "0x79530e05296AE7a00E51b6AD8a0514AFbD28Ba27",
      "txHash": "0x4f7faf334da90ed1bcb48facdc7aebf4c54c54aa798fdbec675ee6b270bb4541",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)5390_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5426_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)241_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)312_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)5447": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)5431": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)5438": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)5455": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)5451": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5426_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)5390_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)5426_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)5451",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)5455",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5431",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5438",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)5390_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5431",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5438",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)5447",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d3b9f6e8561db2eec643fe811ef80a2a6631a50c771f95e39af7ee2935397c0e": {
      "address": "0x06E7B0FC480130bD206637667179B3538deA7155",
      "txHash": "0x91206afd5e6b68be64e440ed34356172d19440a71f8b6263135c855664fa857f",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)5393_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5429_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)241_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)312_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)5450": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)5434": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)5441": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)5458": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)5454": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)5429_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)5393_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)5429_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)5454",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)5458",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5434",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5441",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)5393_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)5434",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)5441",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)5450",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "41e4ae4eaea55fc0031005029d54a1442f05b79b535aa90dfb9b00ae374cc721": {
      "address": "0xd8cF6C5156261BC3eA420DaA0C511d4c9814331b",
      "txHash": "0x720e3e462edbd08cf4dfe1bee6abc1b57ab03718e7097de600f992ee1f0ce721",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)6202_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)6238_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)241_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)312_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)6259": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)6243": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)6250": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)6267": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)6263": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)6238_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)6202_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)6238_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)6263",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)6267",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)6243",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)6250",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)6202_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)6243",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)6250",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)6259",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a01c5728e9dd565add0ea46fa11d5585f6956d91f224567f228a0317693a1920": {
      "address": "0x778B18e500A0275887984d7D1C5932459c63435e",
      "txHash": "0x0d4a044b0681f0f57737fd92d9ac7f5e61b944c070bfe9e199241b442f5a4687",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "totalProtocolFeesGenerated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:19"
          },
          {
            "label": "protocolFeePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:21"
          },
          {
            "label": "creatorFeePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:23"
          },
          {
            "label": "bootstrapPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:25"
          },
          {
            "label": "createDuelFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:27"
          },
          {
            "label": "minThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:29"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:31"
          },
          {
            "label": "userWager",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:33"
          },
          {
            "label": "optionIndexToOptionToken",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:35"
          },
          {
            "label": "totalWagerForOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:37"
          },
          {
            "label": "duelUsersForOption",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:39"
          },
          {
            "label": "startPriceToken",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:41"
          },
          {
            "label": "totalBetsOnDuel",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:43"
          },
          {
            "label": "totalBetsOnOption",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:45"
          },
          {
            "label": "totalCreatorFeeEarned",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:47"
          },
          {
            "label": "creatorToDuelIds",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:49"
          },
          {
            "label": "duelIdToOptions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:51"
          },
          {
            "label": "optionIndexToOption",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:53"
          },
          {
            "label": "allTimeEarnings",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:55"
          },
          {
            "label": "isValidDuelId",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:57"
          },
          {
            "label": "duels",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Duel)6797_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:59"
          },
          {
            "label": "cryptoDuels",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)6833_storage)",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:61"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "22",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:63"
          },
          {
            "label": "bot",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:65"
          },
          {
            "label": "protocolAddress",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "FlashDuels",
            "src": "contracts/FlashDuels.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)452_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)523_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_enum(DuelCategory)6854": {
            "label": "enum DuelCategory",
            "members": [
              "Any",
              "Crypto",
              "Politics",
              "Sports",
              "Twitter",
              "NFTs",
              "News"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelDuration)6838": {
            "label": "enum DuelDuration",
            "members": [
              "ThreeHours",
              "SixHours",
              "TwelveHours"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DuelStatus)6845": {
            "label": "enum DuelStatus",
            "members": [
              "NotStarted",
              "BootStrapped",
              "Live",
              "Settled",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerCondition)6862": {
            "label": "enum TriggerCondition",
            "members": [
              "Above",
              "Below"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TriggerType)6858": {
            "label": "enum TriggerType",
            "members": [
              "Absolute",
              "Percentage"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(address => mapping(string => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
            "label": "mapping(string => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_int256)": {
            "label": "mapping(string => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage))": {
            "label": "mapping(string => mapping(string => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_int256))": {
            "label": "mapping(string => mapping(string => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(string => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(string => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256)))": {
            "label": "mapping(string => mapping(uint256 => mapping(string => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(CryptoDuel)6833_storage)": {
            "label": "mapping(string => struct CryptoDuel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Duel)6797_storage)": {
            "label": "mapping(string => struct Duel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(uint256 => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoDuel)6833_storage": {
            "label": "struct CryptoDuel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "triggerValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerType",
                "type": "t_enum(TriggerType)6858",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "triggerCondition",
                "type": "t_enum(TriggerCondition)6862",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)6838",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)6845",
                "offset": 3,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Duel)6797_storage": {
            "label": "struct Duel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "topic",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duelDuration",
                "type": "t_enum(DuelDuration)6838",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "duelStatus",
                "type": "t_enum(DuelStatus)6845",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "category",
                "type": "t_enum(DuelCategory)6854",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
