{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xD90F4848E37A7f22EC1c3f8eB1896Ee570bB4DFE",
      "txHash": "0x8d43b9d754ab5da9be2fc73ad237304b257cf9bf28dc0aed0989cc7c7436e623",
      "kind": "uups"
    },
    {
      "address": "0x62A14B05Db18f4E12890905D359a6939712D0390",
      "txHash": "0x0fcdb7964b5b576565d61e9e55ed533dbebb6f7db785106971d3b120d4e31e47",
      "kind": "uups"
    },
    {
      "address": "0x33cc92903462Cd175574C601AFF9D5C381404Db3",
      "txHash": "0x617118083402c432d63d42f99349d1a3bda8ff1af27609fb92608e9531832068",
      "kind": "uups"
    },
    {
      "address": "0xC9780e3ADC61e155857F2856d77CfF049e5Fd684",
      "txHash": "0x35b21bcf9a693513a45c5b6b5e1bd5997ca2ce624c4b7924cf802ea68c2c4d87",
      "kind": "uups"
    },
    {
      "address": "0xdffd44785e56267E004C80249bF7c1DcAD4ac7d4",
      "txHash": "0x5c8cfd8eeea3b9aecec3921339a0467cbc5468adbec29e49bd64951bd359de95",
      "kind": "uups"
    },
    {
      "address": "0x542938B5c37d082159C0933EC982E3585c94BD62",
      "txHash": "0x0798fa211105f9ea148e26d9cbf7c59e0bc35f660cd8f6ca04156f784b6c54f8",
      "kind": "uups"
    },
    {
      "address": "0x498e65B2Eca3f726D51fb216eA0fDAbC9E937270",
      "txHash": "0x06d797fd237b37dd48b8046226365f4f61ba826a4d5fe02b656fc190cbd53d16",
      "kind": "uups"
    }
  ],
  "impls": {
    "b504b47d81ae40fd45d25055625cc039bd99c6112691f7f8bf79b8513f657b54": {
      "address": "0x216f7261Bfc3781c079549348137c60F57FF5345",
      "txHash": "0xddbc04c6746b0e05a9952d18aa49663f84bafe835d765fde9b847a8650b8391e",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "faucetMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USDC_Storage",
            "src": "contracts/mocks/mockToken.sol:11"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "USDC_Storage",
            "src": "contracts/mocks/mockToken.sol:15"
          },
          {
            "label": "lastMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "USDC_Storage",
            "src": "contracts/mocks/mockToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)234_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
